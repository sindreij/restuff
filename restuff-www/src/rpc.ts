// This file is generated by srpc-derive

import { rpcCall } from './rpcClient';
import { z } from 'zod';

export const getThingSchema = z.nullable(
    z.object({
        id: z.number(),
        created_at: z.string().datetime(),
        name: z.string(),
        description: z.string(),
        is_in_thing: z.number(),
    })
);

export const setThingNameSchema = z.null();

export const userListSchema = z.array(
    z.object({
        id: z.number(),
        name: z.string(),
    })
);

export const getFirstUserSchema = z.object({
    id: z.number(),
    name: z.string(),
});

export const foobarSchema = z.number();

type GetThingParams = {
    id: number;
};

export const client = {
    getThing: async (params: GetThingParams) => rpcCall('get_thing', getThingSchema, params),
    setThingName: async () => rpcCall('set_thing_name', setThingNameSchema),
    userList: async () => rpcCall('user_list', userListSchema),
    getFirstUser: async () => rpcCall('get_first_user', getFirstUserSchema),
    foobar: async () => rpcCall('foobar', foobarSchema),
};
